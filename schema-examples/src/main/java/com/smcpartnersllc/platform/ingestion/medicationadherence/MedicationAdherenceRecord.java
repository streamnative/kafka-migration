/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.smcpartnersllc.platform.ingestion.medicationadherence;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MedicationAdherenceRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9052445318109320506L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicationAdherenceRecord\",\"namespace\":\"com.smcpartnersllc.platform.ingestion.medicationadherence\",\"fields\":[{\"name\":\"memberId\",\"type\":\"string\"},{\"name\":\"transactionId\",\"type\":\"string\"},{\"name\":\"measureCode\",\"type\":\"string\"},{\"name\":\"measureDescription\",\"type\":\"string\"},{\"name\":\"ndcCode\",\"type\":\"string\"},{\"name\":\"dateOfExtract\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"pdcNumerator\",\"type\":\"int\"},{\"name\":\"adherentBenefitFlag\",\"type\":\"boolean\"},{\"name\":\"pdcRate\",\"type\":\"double\"},{\"name\":\"refillsUsed\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":\"string\"},{\"name\":\"contributorEntity\",\"type\":\"string\"},{\"name\":\"datasetName\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<MedicationAdherenceRecord> ENCODER =
      new BinaryMessageEncoder<MedicationAdherenceRecord>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicationAdherenceRecord> DECODER =
      new BinaryMessageDecoder<MedicationAdherenceRecord>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MedicationAdherenceRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MedicationAdherenceRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MedicationAdherenceRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicationAdherenceRecord>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MedicationAdherenceRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MedicationAdherenceRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MedicationAdherenceRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MedicationAdherenceRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence memberId;
  private java.lang.CharSequence transactionId;
  private java.lang.CharSequence measureCode;
  private java.lang.CharSequence measureDescription;
  private java.lang.CharSequence ndcCode;
  private java.time.Instant dateOfExtract;
  private int pdcNumerator;
  private boolean adherentBenefitFlag;
  private double pdcRate;
  private int refillsUsed;
  private java.lang.CharSequence eventId;
  private java.lang.CharSequence contributorEntity;
  private java.lang.CharSequence datasetName;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicationAdherenceRecord() {}

  /**
   * All-args constructor.
   * @param memberId The new value for memberId
   * @param transactionId The new value for transactionId
   * @param measureCode The new value for measureCode
   * @param measureDescription The new value for measureDescription
   * @param ndcCode The new value for ndcCode
   * @param dateOfExtract The new value for dateOfExtract
   * @param pdcNumerator The new value for pdcNumerator
   * @param adherentBenefitFlag The new value for adherentBenefitFlag
   * @param pdcRate The new value for pdcRate
   * @param refillsUsed The new value for refillsUsed
   * @param eventId The new value for eventId
   * @param contributorEntity The new value for contributorEntity
   * @param datasetName The new value for datasetName
   */
  public MedicationAdherenceRecord(java.lang.CharSequence memberId, java.lang.CharSequence transactionId, java.lang.CharSequence measureCode, java.lang.CharSequence measureDescription, java.lang.CharSequence ndcCode, java.time.Instant dateOfExtract, java.lang.Integer pdcNumerator, java.lang.Boolean adherentBenefitFlag, java.lang.Double pdcRate, java.lang.Integer refillsUsed, java.lang.CharSequence eventId, java.lang.CharSequence contributorEntity, java.lang.CharSequence datasetName) {
    this.memberId = memberId;
    this.transactionId = transactionId;
    this.measureCode = measureCode;
    this.measureDescription = measureDescription;
    this.ndcCode = ndcCode;
    this.dateOfExtract = dateOfExtract.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.pdcNumerator = pdcNumerator;
    this.adherentBenefitFlag = adherentBenefitFlag;
    this.pdcRate = pdcRate;
    this.refillsUsed = refillsUsed;
    this.eventId = eventId;
    this.contributorEntity = contributorEntity;
    this.datasetName = datasetName;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return memberId;
    case 1: return transactionId;
    case 2: return measureCode;
    case 3: return measureDescription;
    case 4: return ndcCode;
    case 5: return dateOfExtract;
    case 6: return pdcNumerator;
    case 7: return adherentBenefitFlag;
    case 8: return pdcRate;
    case 9: return refillsUsed;
    case 10: return eventId;
    case 11: return contributorEntity;
    case 12: return datasetName;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: memberId = (java.lang.CharSequence)value$; break;
    case 1: transactionId = (java.lang.CharSequence)value$; break;
    case 2: measureCode = (java.lang.CharSequence)value$; break;
    case 3: measureDescription = (java.lang.CharSequence)value$; break;
    case 4: ndcCode = (java.lang.CharSequence)value$; break;
    case 5: dateOfExtract = (java.time.Instant)value$; break;
    case 6: pdcNumerator = (java.lang.Integer)value$; break;
    case 7: adherentBenefitFlag = (java.lang.Boolean)value$; break;
    case 8: pdcRate = (java.lang.Double)value$; break;
    case 9: refillsUsed = (java.lang.Integer)value$; break;
    case 10: eventId = (java.lang.CharSequence)value$; break;
    case 11: contributorEntity = (java.lang.CharSequence)value$; break;
    case 12: datasetName = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'memberId' field.
   * @return The value of the 'memberId' field.
   */
  public java.lang.CharSequence getMemberId() {
    return memberId;
  }


  /**
   * Sets the value of the 'memberId' field.
   * @param value the value to set.
   */
  public void setMemberId(java.lang.CharSequence value) {
    this.memberId = value;
  }

  /**
   * Gets the value of the 'transactionId' field.
   * @return The value of the 'transactionId' field.
   */
  public java.lang.CharSequence getTransactionId() {
    return transactionId;
  }


  /**
   * Sets the value of the 'transactionId' field.
   * @param value the value to set.
   */
  public void setTransactionId(java.lang.CharSequence value) {
    this.transactionId = value;
  }

  /**
   * Gets the value of the 'measureCode' field.
   * @return The value of the 'measureCode' field.
   */
  public java.lang.CharSequence getMeasureCode() {
    return measureCode;
  }


  /**
   * Sets the value of the 'measureCode' field.
   * @param value the value to set.
   */
  public void setMeasureCode(java.lang.CharSequence value) {
    this.measureCode = value;
  }

  /**
   * Gets the value of the 'measureDescription' field.
   * @return The value of the 'measureDescription' field.
   */
  public java.lang.CharSequence getMeasureDescription() {
    return measureDescription;
  }


  /**
   * Sets the value of the 'measureDescription' field.
   * @param value the value to set.
   */
  public void setMeasureDescription(java.lang.CharSequence value) {
    this.measureDescription = value;
  }

  /**
   * Gets the value of the 'ndcCode' field.
   * @return The value of the 'ndcCode' field.
   */
  public java.lang.CharSequence getNdcCode() {
    return ndcCode;
  }


  /**
   * Sets the value of the 'ndcCode' field.
   * @param value the value to set.
   */
  public void setNdcCode(java.lang.CharSequence value) {
    this.ndcCode = value;
  }

  /**
   * Gets the value of the 'dateOfExtract' field.
   * @return The value of the 'dateOfExtract' field.
   */
  public java.time.Instant getDateOfExtract() {
    return dateOfExtract;
  }


  /**
   * Sets the value of the 'dateOfExtract' field.
   * @param value the value to set.
   */
  public void setDateOfExtract(java.time.Instant value) {
    this.dateOfExtract = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'pdcNumerator' field.
   * @return The value of the 'pdcNumerator' field.
   */
  public int getPdcNumerator() {
    return pdcNumerator;
  }


  /**
   * Sets the value of the 'pdcNumerator' field.
   * @param value the value to set.
   */
  public void setPdcNumerator(int value) {
    this.pdcNumerator = value;
  }

  /**
   * Gets the value of the 'adherentBenefitFlag' field.
   * @return The value of the 'adherentBenefitFlag' field.
   */
  public boolean getAdherentBenefitFlag() {
    return adherentBenefitFlag;
  }


  /**
   * Sets the value of the 'adherentBenefitFlag' field.
   * @param value the value to set.
   */
  public void setAdherentBenefitFlag(boolean value) {
    this.adherentBenefitFlag = value;
  }

  /**
   * Gets the value of the 'pdcRate' field.
   * @return The value of the 'pdcRate' field.
   */
  public double getPdcRate() {
    return pdcRate;
  }


  /**
   * Sets the value of the 'pdcRate' field.
   * @param value the value to set.
   */
  public void setPdcRate(double value) {
    this.pdcRate = value;
  }

  /**
   * Gets the value of the 'refillsUsed' field.
   * @return The value of the 'refillsUsed' field.
   */
  public int getRefillsUsed() {
    return refillsUsed;
  }


  /**
   * Sets the value of the 'refillsUsed' field.
   * @param value the value to set.
   */
  public void setRefillsUsed(int value) {
    this.refillsUsed = value;
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.CharSequence getEventId() {
    return eventId;
  }


  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.CharSequence value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'contributorEntity' field.
   * @return The value of the 'contributorEntity' field.
   */
  public java.lang.CharSequence getContributorEntity() {
    return contributorEntity;
  }


  /**
   * Sets the value of the 'contributorEntity' field.
   * @param value the value to set.
   */
  public void setContributorEntity(java.lang.CharSequence value) {
    this.contributorEntity = value;
  }

  /**
   * Gets the value of the 'datasetName' field.
   * @return The value of the 'datasetName' field.
   */
  public java.lang.CharSequence getDatasetName() {
    return datasetName;
  }


  /**
   * Sets the value of the 'datasetName' field.
   * @param value the value to set.
   */
  public void setDatasetName(java.lang.CharSequence value) {
    this.datasetName = value;
  }

  /**
   * Creates a new MedicationAdherenceRecord RecordBuilder.
   * @return A new MedicationAdherenceRecord RecordBuilder
   */
  public static com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder newBuilder() {
    return new com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder();
  }

  /**
   * Creates a new MedicationAdherenceRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicationAdherenceRecord RecordBuilder
   */
  public static com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder newBuilder(com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder other) {
    if (other == null) {
      return new com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder();
    } else {
      return new com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder(other);
    }
  }

  /**
   * Creates a new MedicationAdherenceRecord RecordBuilder by copying an existing MedicationAdherenceRecord instance.
   * @param other The existing instance to copy.
   * @return A new MedicationAdherenceRecord RecordBuilder
   */
  public static com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder newBuilder(com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord other) {
    if (other == null) {
      return new com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder();
    } else {
      return new com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for MedicationAdherenceRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicationAdherenceRecord>
    implements org.apache.avro.data.RecordBuilder<MedicationAdherenceRecord> {

    private java.lang.CharSequence memberId;
    private java.lang.CharSequence transactionId;
    private java.lang.CharSequence measureCode;
    private java.lang.CharSequence measureDescription;
    private java.lang.CharSequence ndcCode;
    private java.time.Instant dateOfExtract;
    private int pdcNumerator;
    private boolean adherentBenefitFlag;
    private double pdcRate;
    private int refillsUsed;
    private java.lang.CharSequence eventId;
    private java.lang.CharSequence contributorEntity;
    private java.lang.CharSequence datasetName;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.memberId)) {
        this.memberId = data().deepCopy(fields()[0].schema(), other.memberId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[1].schema(), other.transactionId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.measureCode)) {
        this.measureCode = data().deepCopy(fields()[2].schema(), other.measureCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.measureDescription)) {
        this.measureDescription = data().deepCopy(fields()[3].schema(), other.measureDescription);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ndcCode)) {
        this.ndcCode = data().deepCopy(fields()[4].schema(), other.ndcCode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.dateOfExtract)) {
        this.dateOfExtract = data().deepCopy(fields()[5].schema(), other.dateOfExtract);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.pdcNumerator)) {
        this.pdcNumerator = data().deepCopy(fields()[6].schema(), other.pdcNumerator);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.adherentBenefitFlag)) {
        this.adherentBenefitFlag = data().deepCopy(fields()[7].schema(), other.adherentBenefitFlag);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.pdcRate)) {
        this.pdcRate = data().deepCopy(fields()[8].schema(), other.pdcRate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.refillsUsed)) {
        this.refillsUsed = data().deepCopy(fields()[9].schema(), other.refillsUsed);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.eventId)) {
        this.eventId = data().deepCopy(fields()[10].schema(), other.eventId);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.contributorEntity)) {
        this.contributorEntity = data().deepCopy(fields()[11].schema(), other.contributorEntity);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.datasetName)) {
        this.datasetName = data().deepCopy(fields()[12].schema(), other.datasetName);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing MedicationAdherenceRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.memberId)) {
        this.memberId = data().deepCopy(fields()[0].schema(), other.memberId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[1].schema(), other.transactionId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.measureCode)) {
        this.measureCode = data().deepCopy(fields()[2].schema(), other.measureCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.measureDescription)) {
        this.measureDescription = data().deepCopy(fields()[3].schema(), other.measureDescription);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ndcCode)) {
        this.ndcCode = data().deepCopy(fields()[4].schema(), other.ndcCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dateOfExtract)) {
        this.dateOfExtract = data().deepCopy(fields()[5].schema(), other.dateOfExtract);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pdcNumerator)) {
        this.pdcNumerator = data().deepCopy(fields()[6].schema(), other.pdcNumerator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.adherentBenefitFlag)) {
        this.adherentBenefitFlag = data().deepCopy(fields()[7].schema(), other.adherentBenefitFlag);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pdcRate)) {
        this.pdcRate = data().deepCopy(fields()[8].schema(), other.pdcRate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.refillsUsed)) {
        this.refillsUsed = data().deepCopy(fields()[9].schema(), other.refillsUsed);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventId)) {
        this.eventId = data().deepCopy(fields()[10].schema(), other.eventId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.contributorEntity)) {
        this.contributorEntity = data().deepCopy(fields()[11].schema(), other.contributorEntity);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.datasetName)) {
        this.datasetName = data().deepCopy(fields()[12].schema(), other.datasetName);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'memberId' field.
      * @return The value.
      */
    public java.lang.CharSequence getMemberId() {
      return memberId;
    }


    /**
      * Sets the value of the 'memberId' field.
      * @param value The value of 'memberId'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setMemberId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.memberId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'memberId' field has been set.
      * @return True if the 'memberId' field has been set, false otherwise.
      */
    public boolean hasMemberId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'memberId' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearMemberId() {
      memberId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionId' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransactionId() {
      return transactionId;
    }


    /**
      * Sets the value of the 'transactionId' field.
      * @param value The value of 'transactionId'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setTransactionId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.transactionId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionId' field has been set.
      * @return True if the 'transactionId' field has been set, false otherwise.
      */
    public boolean hasTransactionId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'transactionId' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearTransactionId() {
      transactionId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'measureCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getMeasureCode() {
      return measureCode;
    }


    /**
      * Sets the value of the 'measureCode' field.
      * @param value The value of 'measureCode'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setMeasureCode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.measureCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'measureCode' field has been set.
      * @return True if the 'measureCode' field has been set, false otherwise.
      */
    public boolean hasMeasureCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'measureCode' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearMeasureCode() {
      measureCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'measureDescription' field.
      * @return The value.
      */
    public java.lang.CharSequence getMeasureDescription() {
      return measureDescription;
    }


    /**
      * Sets the value of the 'measureDescription' field.
      * @param value The value of 'measureDescription'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setMeasureDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.measureDescription = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'measureDescription' field has been set.
      * @return True if the 'measureDescription' field has been set, false otherwise.
      */
    public boolean hasMeasureDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'measureDescription' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearMeasureDescription() {
      measureDescription = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ndcCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getNdcCode() {
      return ndcCode;
    }


    /**
      * Sets the value of the 'ndcCode' field.
      * @param value The value of 'ndcCode'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setNdcCode(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ndcCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ndcCode' field has been set.
      * @return True if the 'ndcCode' field has been set, false otherwise.
      */
    public boolean hasNdcCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ndcCode' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearNdcCode() {
      ndcCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateOfExtract' field.
      * @return The value.
      */
    public java.time.Instant getDateOfExtract() {
      return dateOfExtract;
    }


    /**
      * Sets the value of the 'dateOfExtract' field.
      * @param value The value of 'dateOfExtract'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setDateOfExtract(java.time.Instant value) {
      validate(fields()[5], value);
      this.dateOfExtract = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'dateOfExtract' field has been set.
      * @return True if the 'dateOfExtract' field has been set, false otherwise.
      */
    public boolean hasDateOfExtract() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'dateOfExtract' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearDateOfExtract() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'pdcNumerator' field.
      * @return The value.
      */
    public int getPdcNumerator() {
      return pdcNumerator;
    }


    /**
      * Sets the value of the 'pdcNumerator' field.
      * @param value The value of 'pdcNumerator'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setPdcNumerator(int value) {
      validate(fields()[6], value);
      this.pdcNumerator = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'pdcNumerator' field has been set.
      * @return True if the 'pdcNumerator' field has been set, false otherwise.
      */
    public boolean hasPdcNumerator() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'pdcNumerator' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearPdcNumerator() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'adherentBenefitFlag' field.
      * @return The value.
      */
    public boolean getAdherentBenefitFlag() {
      return adherentBenefitFlag;
    }


    /**
      * Sets the value of the 'adherentBenefitFlag' field.
      * @param value The value of 'adherentBenefitFlag'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setAdherentBenefitFlag(boolean value) {
      validate(fields()[7], value);
      this.adherentBenefitFlag = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'adherentBenefitFlag' field has been set.
      * @return True if the 'adherentBenefitFlag' field has been set, false otherwise.
      */
    public boolean hasAdherentBenefitFlag() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'adherentBenefitFlag' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearAdherentBenefitFlag() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'pdcRate' field.
      * @return The value.
      */
    public double getPdcRate() {
      return pdcRate;
    }


    /**
      * Sets the value of the 'pdcRate' field.
      * @param value The value of 'pdcRate'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setPdcRate(double value) {
      validate(fields()[8], value);
      this.pdcRate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'pdcRate' field has been set.
      * @return True if the 'pdcRate' field has been set, false otherwise.
      */
    public boolean hasPdcRate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'pdcRate' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearPdcRate() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'refillsUsed' field.
      * @return The value.
      */
    public int getRefillsUsed() {
      return refillsUsed;
    }


    /**
      * Sets the value of the 'refillsUsed' field.
      * @param value The value of 'refillsUsed'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setRefillsUsed(int value) {
      validate(fields()[9], value);
      this.refillsUsed = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'refillsUsed' field has been set.
      * @return True if the 'refillsUsed' field has been set, false otherwise.
      */
    public boolean hasRefillsUsed() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'refillsUsed' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearRefillsUsed() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventId() {
      return eventId;
    }


    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setEventId(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.eventId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'contributorEntity' field.
      * @return The value.
      */
    public java.lang.CharSequence getContributorEntity() {
      return contributorEntity;
    }


    /**
      * Sets the value of the 'contributorEntity' field.
      * @param value The value of 'contributorEntity'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setContributorEntity(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.contributorEntity = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'contributorEntity' field has been set.
      * @return True if the 'contributorEntity' field has been set, false otherwise.
      */
    public boolean hasContributorEntity() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'contributorEntity' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearContributorEntity() {
      contributorEntity = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'datasetName' field.
      * @return The value.
      */
    public java.lang.CharSequence getDatasetName() {
      return datasetName;
    }


    /**
      * Sets the value of the 'datasetName' field.
      * @param value The value of 'datasetName'.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder setDatasetName(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.datasetName = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'datasetName' field has been set.
      * @return True if the 'datasetName' field has been set, false otherwise.
      */
    public boolean hasDatasetName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'datasetName' field.
      * @return This builder.
      */
    public com.smcpartnersllc.platform.ingestion.medicationadherence.MedicationAdherenceRecord.Builder clearDatasetName() {
      datasetName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicationAdherenceRecord build() {
      try {
        MedicationAdherenceRecord record = new MedicationAdherenceRecord();
        record.memberId = fieldSetFlags()[0] ? this.memberId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.transactionId = fieldSetFlags()[1] ? this.transactionId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.measureCode = fieldSetFlags()[2] ? this.measureCode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.measureDescription = fieldSetFlags()[3] ? this.measureDescription : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ndcCode = fieldSetFlags()[4] ? this.ndcCode : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.dateOfExtract = fieldSetFlags()[5] ? this.dateOfExtract : (java.time.Instant) defaultValue(fields()[5]);
        record.pdcNumerator = fieldSetFlags()[6] ? this.pdcNumerator : (java.lang.Integer) defaultValue(fields()[6]);
        record.adherentBenefitFlag = fieldSetFlags()[7] ? this.adherentBenefitFlag : (java.lang.Boolean) defaultValue(fields()[7]);
        record.pdcRate = fieldSetFlags()[8] ? this.pdcRate : (java.lang.Double) defaultValue(fields()[8]);
        record.refillsUsed = fieldSetFlags()[9] ? this.refillsUsed : (java.lang.Integer) defaultValue(fields()[9]);
        record.eventId = fieldSetFlags()[10] ? this.eventId : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.contributorEntity = fieldSetFlags()[11] ? this.contributorEntity : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.datasetName = fieldSetFlags()[12] ? this.datasetName : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicationAdherenceRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicationAdherenceRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicationAdherenceRecord>
    READER$ = (org.apache.avro.io.DatumReader<MedicationAdherenceRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










